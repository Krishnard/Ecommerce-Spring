spring.application.name=EcommerceSpring

server.port = ${PORT}

fakeStore.baseUrl=${FakeBase_URL}

spring.datasource.url = jdbc:mysql://localhost:3306/ecommerce_db

spring.datasource.username=root

#spring.datasource.password =    # but for now I am hardcoding it
spring.datasource.password= ${DB_PASSWORD}
# this is a correct way to write password in spring boot
# password is saved in .env to avoid hardcoding sensitive information
# as this file is uploaded to GitHub

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# this is default driver class name for MySQL
# this tell spring boot to use MySQL as the database

spring.jpa.show-sql=true
# this specifically tell hibernate to show the SQL queries in the console
# useful for debugging

spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL8Dialect
# dialect means the type of database we are using
# this tell hibernate to use MySQL dialect
# this ensures hibernate uses the sql syntax

spring.jpa.hibernate.ddl-auto=validate
# need to change from update to validate for flyway
# this tells hibernate to update the database schema automatically
# control how the hibernate behaves with the database
# create - drop the db and recreates schema in every run
# update - update the schema if there are any changes (add new col/rows , but won't delete the table or data)
# create-drop - drop schema when the application stops

spring.flyway.enabled=true


spring.flyway.locations=classpath:db/migration



